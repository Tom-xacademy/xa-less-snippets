{
    "XAImportStyleAndMixins": {
        "prefix": "ims",
        "body": [
            "@import \"../../../../Css/Mixins.less\";",
            "@import \"../../../../Css/Colors.less\";"
        ],
        "description": "In the common component tree structure, it imports the Colors and Mixins less files."
    },
    "XACommonInputStyle": {
        "prefix": "iwrapper",
        "body": [
            ".wrapper {",
            "    // wrapper styling, editing it is not recommended",
            "",
            "    &-sm {",
            "        // small wrapper styling for checkboxes, editing is not recommended",
            "    }",
            "",
            "    .input-description {",
            "        //description text styling if the input is provided with one",
            "        &-logic {",
            "            //description text styling for logic input types such as checkbox, radio, etc",
            "        }",
            "    }",
            "}",
            "",
            ".common-input {",
            "    //General input styling",
            "    //The border radius of the generic input types,",
            "    //excluding DatePicker and Select",
            "    // .border-radius(3rem);",
            "",
            "    &:focus {",
            "        //focus styling",
            "    }",
            "}",
            "",
            ".valid-input {",
            "    //valid input styling",
            "}",
            "",
            ".invalid-input {",
            "    //invalid input styling",
            "}",
            "",
            ".common-input:disabled {",
            "    //disabled styling",
            "    //color: #ccc;",
            "    //background-color: #999;",
            "}",
            "",
            ".input-label {",
            "}",
            "",
            ".input-warning {",
            "    &::after {",
            "        //Styling of the text that appears if warningText prop is provided to the inputs",
            "    }",
            "}"
        ],
        "description": "Generates a styling structure for the common-input class and the 'wrapper' that is used around the xa-inputs."
    },
    "XAButtonStyling": {
        "prefix": "ibutton",
        "body": [
            ".xa-button {",
            "    &:focus {",
            "    }",
            "",
            "    &__wide-button {",
            "    }",
            "",
            "    &__alt-color {",
            "    }",
            "",
            "    &__text-type {",
            "        &:hover {",
            "        }",
            "    }",
            "",
            "    &__link-button {",
            "    }",
            "",
            "    &__full-width {",
            "    }",
            "}",
            "",
            ".xa-button:disabled {",
            "}"
        ],
        "description": "Generates a styling structure for the xa-button."
    },
    "XAICheckboxStyling": {
        "prefix": "icheckbox",
        "body": [
            ".checkbox-container {",
            "    // color: white;",
            "",
            "    // Create a custom checkbox",
            "    .check-mark {",
            "        // background-color: white;",
            "    }",

            "    // On mouse-over, add a background color",
            "    &:hover .checkbox-input ~ .check-mark {",
            "        // background-color: #your-color;",
            "    }",
            "",
            "    // When the checkbox is checked, add a background color",
            "    .checkbox-input:checked ~ .check-mark {",
            "        // background-color: #your-color;",
            "    }",
            "",
            "    // Style the check-mark/indicator",
            "    .check-mark:after {",
            "        // border-color: #your-color;",
            "    }",
            "",
            "    .checkbox-link {",
            "        //color: #your-color;",
            "        &:hover {",
            "            //color: #your-color;",
            "        }",
            "    }",
            "}",
            "",
            ".disabled-checkbox {",
            "    .checkbox-container {",
            "        &:hover .checkbox-input ~ .check-mark {",
            "            // background-color: #your-color;",
            "        }",
            "    }",
            "}"
        ],
        "description": "Generates a styling structure for checkbox input type."
    },
    "XAInputsDatepickerStyling": {
        "prefix": "idate",
        "body": [
            ".wrapper {",
            "    .datepicker-icon {",
            "        //Flaticon colour",
            "        //color: #your-color;",
            "    }",
            "}",
            "",
            ".react-datepicker-wrapper {",
            "}",
            "",
            ".react-datepicker__input-container {",
            "    // Input border color",
            "    //border-color: #your-color;",
            "    // Input background-color",
            "    //background-color: #your-color;",
            "    // Input border radius",
            "    //.border-radius(4rem);",
            "",
            "    .date-picker {",
            "        //Input text color",
            "        //color: #your-color;",
            "    }",
            "}",
            "",
            ".react-datepicker-popper {",
            "    .react-datepicker {",
            "        //width: 30rem",
            "        &__navigation {",
            "            &--previous {",
            "                //Previous month button color",
            "                // border-right-color: #your-color;",
            "            }",
            "            &--next {",
            "                //Next month button color",
            "                // border-left-color: #your-color;",
            "            }",
            "        }",
            "",
            "        &__day-names {",
            "        }",
            "",
            "        &__header {",
            "",
            "            &__dropdown {",
            "            }",
            "        }",
            "",
            "        &__year {",
            "            &-read-view--down-arrow {",
            "            }",
            "",
            "            &-dropdown {",
            "            }",
            "",
            "            &-option {",
            "                //Option background-color and color",
            "                // background-color: #your-color;",
            "                // color: #your-color;",
            "",
            "                //Option hover background-color and color",
            "                &:hover {",
            "                    // background-color: #your-color",
            "                    // color: #your-color;",
            "                }",
            "",
            "                &--selected_year {",
            "                    //Selected year option background-color and color",
            "                    // background-color: #your-color",
            "                    // color: #your-color;",
            "",
            "                    &:hover {",
            "                        //Selected year option background-color and color on hover",
            "                            // background-color: #your-color",
            "                        // color: #your-color;",
            "                    }",
            "                }",
            "            }",
            "        }",
            "",
            "        &__current-month {",
            "        }",
            "",
            "        &__month {",
            "        }",
            "",
            "        &__week {",
            "        }",
            "",
            "        &__month-container {",
            "        }",
            "",
            "        &__day {",
            "            &--selected {",
            "                //The background color and color of the selected date",
            "                //background-color: #your-color;",
            "                //color: #your-color;",
            "            }",
            "",
            "            &--today {",
            "                // Today's background color and color",
            "                //background-color: #your-color;",
            "                //color: #your-color;",
            "            }",
            "        }",
            "",
            "        //Time wrapper",
            "        &__time-container {",
            "        }",
            "",
            "        &-time__header {",
            "            // Header text styling",
            "        }",
            "",
            "        &__time {",
            "            &-box {",
            "            }",
            "            &-list-item {",
            "                // Time list item background color and color.",
            "                // NOTE: The !important must be used for all the time ,background-coloring by default",
            "                // because the original css can't be overwritten in react-datepicker ,otherwise.",
            "                //",
            "                // background-color: #your-color !important;",
            "                // color: #your-color;",
            "",
            "                &:hover {",
            "                    // Time list item background color and color on hover.",
            "                    // background-color: #your-color !important;",
            "                    // color: #your-color;",
            "                }",
            "",
            "                &--selected {",
            "                    // Time list selected item background color and color.",
            "                    // background-color: #your-color !important;",
            "                    // color: #your-color;",
            "                    &:hover {",
            "                        // Time list selected item background color and color on ,hover.",
            "                        // background-color: #your-color !important;",
            "                        // color: #your-color;",
            "                    }",
            "                }",
            "            }",
            "        }",
            "    }",
            "}",
            "",
            ".disabled-date-wrapper {",
            "    .datepicker-icon {",
            "        //Disabled flaticon colour",
            "        // color: #999;",
            "    }",
            "    .react-datepicker__input-container {",
            "        //Disabled border and background colors",
            "        // border-color: #666;",
            "        // background-color: #666;",
            "        .date-picker {",
            "            //Disabled text color",
            "            // color: #999;",
            "        }",
            "    }",
            "}"
        ],
        "description": "Generates a styling structure for the datepicker input."
    },
    "XARadioInputStyling": {
        "prefix": "iradio",
        "body": [
            "// Customize the label (the radio-container)",
            ".radio-container {",
            "    //color: #your-color;",
            "",
            "    .text {",
            "        //text after input",
            "        //color: #your-color;",
            "    }",
            "",
            "    // Create a custom radio button",
            "    .check-mark {",
            "        //background-color: #your-color; //<= This is required",
            "        // border-color: #your-color;",
            "    }",
            "",
            "    &:hover {",
            "        .radio-input ~ .check-mark {",
            "            //Hover background-color",
            "            //background-color: #your-color;",
            "        }",
            "",
            "        .text {",
            "            //Hover text color",
            "            //color: #your-color",
            "        }",
            "    }",
            "",
            "    // When the radio button is checked, add a background-color",
            "    .radio-input:checked ~ .check-mark {",
            "        //Checked background color",
            "        //background-color: #your-color;",
            "    }",
            "}",
            "",
            ".active-radio {",
            "    .text {",
            "        //Checked text color",
            "        //color: #your-color;",
            "    }",
            "}"
        ],
        "description": "Generats a styling structure for the radio button."
    },
    "XASelectInputStyling": {
        "prefix": "iselect",
        "body": [
            ".select-input {",
            "    .__control {",
            "        //Input border radius",
            "        //   .border-radius(3rem);",
            "        //Input background-color",
            "        //    background-color: #your-color;",
            "        //Input border color (not focused)",
            "        //   border-color: #your-color;",
            "",
            "        .__value-container {",
            "            .__input {",
            "                input {",
            "                }",
            "            }",
            "        }",
            "",
            "        .__indicators {",
            "            .__loading-indicator {",
            "                //The colour of the loading dots",
            "                //color: #your-color",
            "            }",
            "        }",
            "    }",
            "",
            "    .__menu {",
            "        //Option list background-color and text color",
            "        // background-color: #your-color;",
            "        // color: #your-color;",
            "",
            "        .__option--is-focused {",
            "            // background-color: #your-color;",
            "            // color: #fff;",
            "        }",
            "",
            "        .__option--is-selected {",
            "             //Selected option styling when the options are visible",
            "         }",
            "    }",
            "}",
            "",
            ".disabled-select-wrapper {",
            "    //You can just copy the class name structure from above and change what you want",
            "}"
        ],
        "description": "Generates a styling structure for the select input type."
    },
    "XASwitchInputStyling": {
        "prefix": "iswitch",
        "body": [
            ".switch {",
            "    .switch {",
            "        // The background-colour of the switch input",
            "        // background-color: #your-colour;",
            "    }",
            "",
            "    .switch:before {",
            "        // The colour of the dot in the switch",
            "        // background-color: #your-colour;",
            "    }",
            "",
            "    .switch-input:checked + .switch {",
            "        // Checked marker background-color",
            "        // background-color: #your-color;",
            "    }",
            "",
            "    .switch-input:focus + .switch {",
            "        // On focus styling, for example, box-shadow",
            "        // box-shadow: 0 0 1rem 0.1rem rgba(#your-color);",
            "    }",
            "",
            "    .switch-input:checked + .switch:before {",
            "        //Increase this only if you incerease the switch size.",
            "        //.transform(translateX(1.6rem));",
            "    }",
            "",
            "    // Rounded switchs",
            "    .layout-shape {",
            "        //remove border-radius if you need them to be square shaped",
            "    }",
            "",
            "    .layout-shape:before {",
            "    }",
            "}",
            "",
            ".switch-label {",
            "    //The text colour of your label",
            "    // color: #your-color;",
            "}"
        ],
        "description": "Generates a styling structure for the switch input type."
    },
    "XAErrorSnippet": {
        "prefix": "ierror",
        "body": [
            ".error-container {",
            "   //This outputs the error in a small 'box' with some padding",
            "   //and possibly a button that can reset the error after confirmation",
            "   &__oneline-text {",
            "   }",
            "",
            "   //This outputs the error as a simple string without any padding",
            "   &__redline {",
            "   }",
            "",
            "   &__button {",
            "       // background-color: #your-color;",
            "       &:hover {",
            "           // background-color: #your-color;",
            "       }",
            "   }",
            "}",
            "",
            ".floating-error-container {",
            "   // background-color: #your-color;",
            "   .floating-error {",
            "      &__title {",
            "       }",
            "",
            "       &__message {",
            "           // color: #your-color;",
            "       }",
            "",
            "       &__missing-param-list {",
            "           // color: #your-color;",
            "",
            "           &--element {",
            "           }",
            "       }",
            "",
            "       &__button {",
            "           // background-color: #your-color;",
            "           // color: #your-color;",
            "",
            "           &:hover {",
            "               // background-color: #your-color;",
            "               // color: #your-color;",
            "           }",
            "       }",
            "   }",
            "}"
        ],
        "description": "Generates styling for the error handler component."
    }
}
